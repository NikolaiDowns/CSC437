2025-05-24T06:14:51.332Z vite:config config file loaded in 15763.40ms
2025-05-24T06:14:51.338Z vite:env loading env files: [
  '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/.env',
  '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/.env.local',
  '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/.env.production',
  '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/.env.production.local'
]
2025-05-24T06:14:51.338Z vite:env env files loaded in 1.02ms
2025-05-24T06:14:51.339Z vite:env using resolved env: {}
2025-05-24T06:14:51.384Z vite:config using resolved config: {
  root: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto',
  build: {
    target: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
    polyfillModulePreload: true,
    modulePreload: { polyfill: true },
    outDir: 'dist',
    assetsDir: 'assets',
    assetsInlineLimit: 4096,
    sourcemap: false,
    terserOptions: {},
    rollupOptions: {
      input: {
        main: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/index.html',
        track: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/track_progress.html',
        login: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/login.html',
        signup: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/signup.html'
      }
    },
    commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
    dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
    write: true,
    emptyOutDir: null,
    copyPublicDir: true,
    manifest: false,
    lib: false,
    ssrManifest: false,
    ssrEmitAssets: false,
    reportCompressedSize: true,
    chunkSizeWarningLimit: 500,
    watch: null,
    cssCodeSplit: true,
    minify: 'esbuild',
    ssr: false,
    emitAssets: true,
    createEnvironment: [Function: createEnvironment],
    cssTarget: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
    cssMinify: true
  },
  logLevel: 'info',
  environments: {
    client: {
      define: undefined,
      resolve: {
        externalConditions: [ 'node' ],
        extensions: [
          '.mjs',  '.js',
          '.mts',  '.ts',
          '.jsx',  '.tsx',
          '.json'
        ],
        dedupe: [],
        noExternal: [],
        external: [],
        preserveSymlinks: false,
        alias: [
          {
            find: /^\/?@vite\/env/,
            replacement: '/@fs/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/node_modules/vite/dist/client/env.mjs'
          },
          {
            find: /^\/?@vite\/client/,
            replacement: '/@fs/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/node_modules/vite/dist/client/client.mjs'
          }
        ],
        mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
        conditions: [ 'module', 'browser', 'development|production' ],
        builtins: []
      },
      keepProcessEnv: false,
      consumer: 'client',
      optimizeDeps: {
        include: [],
        exclude: [],
        needsInterop: [],
        extensions: [],
        disabled: undefined,
        holdUntilCrawlEnd: true,
        force: false,
        noDiscovery: false,
        esbuildOptions: { preserveSymlinks: false }
      },
      dev: {
        warmup: [],
        sourcemap: { js: true },
        sourcemapIgnoreList: [Function: isInNodeModules$1],
        preTransformRequests: true,
        createEnvironment: [Function: defaultCreateClientDevEnvironment],
        recoverable: true,
        moduleRunnerTransform: false
      },
      build: {
        target: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        polyfillModulePreload: true,
        modulePreload: { polyfill: true },
        outDir: 'dist',
        assetsDir: 'assets',
        assetsInlineLimit: 4096,
        sourcemap: false,
        terserOptions: {},
        rollupOptions: {
          input: {
            main: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/index.html',
            track: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/track_progress.html',
            login: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/login.html',
            signup: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/signup.html'
          }
        },
        commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
        dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
        write: true,
        emptyOutDir: null,
        copyPublicDir: true,
        manifest: false,
        lib: false,
        ssrManifest: false,
        ssrEmitAssets: false,
        reportCompressedSize: true,
        chunkSizeWarningLimit: 500,
        watch: null,
        cssCodeSplit: true,
        minify: 'esbuild',
        ssr: false,
        emitAssets: true,
        createEnvironment: [Function: createEnvironment],
        cssTarget: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        cssMinify: true
      }
    }
  },
  resolve: {
    externalConditions: [ 'node' ],
    extensions: [
      '.mjs',  '.js',
      '.mts',  '.ts',
      '.jsx',  '.tsx',
      '.json'
    ],
    dedupe: [],
    noExternal: [],
    external: [],
    preserveSymlinks: false,
    alias: [
      {
        find: /^\/?@vite\/env/,
        replacement: '/@fs/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/node_modules/vite/dist/client/env.mjs'
      },
      {
        find: /^\/?@vite\/client/,
        replacement: '/@fs/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/node_modules/vite/dist/client/client.mjs'
      }
    ],
    mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
    conditions: [ 'module', 'browser', 'development|production' ],
    builtins: []
  },
  configFile: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/vite.config.js',
  configFileDependencies: [
    '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/vite.config.js'
  ],
  inlineConfig: {
    root: undefined,
    base: undefined,
    mode: undefined,
    configFile: undefined,
    configLoader: undefined,
    logLevel: 'info',
    clearScreen: undefined,
    build: {}
  },
  base: '/',
  decodedBase: '/',
  rawBase: '/',
  publicDir: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/public',
  cacheDir: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto/node_modules/.vite',
  command: 'build',
  mode: 'production',
  isWorker: false,
  mainConfig: null,
  bundleChain: [],
  isProduction: true,
  plugins: [
    'vite:build-metadata',
    'vite:watch-package-data',
    'alias',
    'vite:modulepreload-polyfill',
    'vite:resolve',
    'vite:html-inline-proxy',
    'vite:css',
    'vite:esbuild',
    'vite:json',
    'vite:wasm-helper',
    'vite:worker',
    'vite:asset',
    'vite:wasm-fallback',
    'vite:define',
    'vite:css-post',
    'vite:build-html',
    'vite:worker-import-meta-url',
    'vite:asset-import-meta-url',
    'vite:force-systemjs-wrap-complete',
    'commonjs',
    'vite:data-uri',
    'vite:rollup-options-plugins',
    'vite:dynamic-import-vars',
    'vite:import-glob',
    'vite:build-import-analysis',
    'vite:esbuild-transpile',
    'vite:terser',
    'vite:manifest',
    'vite:ssr-manifest',
    'vite:reporter',
    'vite:load-fallback'
  ],
  css: {
    transformer: 'postcss',
    preprocessorMaxWorkers: 0,
    devSourcemap: false
  },
  json: { namedExports: true, stringify: 'auto' },
  esbuild: { jsxDev: false },
  server: {
    port: 5173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {},
    warmup: { clientFiles: [], ssrFiles: [] },
    middlewareMode: false,
    fs: {
      strict: true,
      deny: [ '.env', '.env.*', '*.{crt,pem}', '**/.git/**' ],
      allow: [ '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh' ]
    },
    preTransformRequests: true,
    perEnvironmentStartEndDuringDev: false,
    sourcemapIgnoreList: [Function: isInNodeModules$1]
  },
  builder: undefined,
  preview: {
    port: 4173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {}
  },
  envDir: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto',
  env: { BASE_URL: '/', MODE: 'production', DEV: false, PROD: true },
  assetsInclude: [Function: assetsInclude],
  logger: {
    hasWarned: false,
    info: [Function: info],
    warn: [Function: warn],
    warnOnce: [Function: warnOnce],
    error: [Function: error],
    clearScreen: [Function: clearScreen],
    hasErrorLogged: [Function: hasErrorLogged]
  },
  packageCache: Map(1) {
    'fnpd_/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto' => {
      dir: '/Users/nikolai/Documents/DynamicWebDev/git347/CSC437-fresh/packages/proto',
      data: {
        name: 'proto',
        version: '1.0.0',
        main: 'index.html',
        scripts: {
          start: 'http-server dist -p 3000',
          test: 'echo "Error: no test specified" && exit 1',
          dev: 'npx vite',
          build: 'npx tsc && npx vite build'
        },
        author: 'Nikolai Downs',
        license: 'ISC',
        description: '',
        dependencies: {
          '@calpoly/mustang': '^1.0.15',
          'http-server': '^14.1.1',
          lit: '^3.3.0'
        },
        devDependencies: {
          'http-server': '^14.1.1',
          typescript: '^5.8.3',
          vite: '^6.3.5'
        }
      },
      hasSideEffects: [Function: hasSideEffects],
      setResolvedCache: [Function: setResolvedCache],
      getResolvedCache: [Function: getResolvedCache]
    },
    set: [Function (anonymous)]
  },
  worker: { format: 'iife', plugins: '() => plugins', rollupOptions: {} },
  appType: 'spa',
  experimental: { importGlobRestoreExtension: false, hmrPartialAccept: false },
  future: undefined,
  ssr: {
    target: 'node',
    optimizeDeps: { esbuildOptions: { preserveSymlinks: false } },
    resolve: { conditions: undefined, externalConditions: undefined }
  },
  optimizeDeps: {
    include: [],
    exclude: [],
    needsInterop: [],
    extensions: [],
    disabled: undefined,
    holdUntilCrawlEnd: true,
    force: false,
    noDiscovery: false,
    esbuildOptions: { preserveSymlinks: false }
  },
  dev: {
    warmup: [],
    sourcemap: { js: true },
    sourcemapIgnoreList: [Function: isInNodeModules$1],
    preTransformRequests: false,
    createEnvironment: [Function: defaultCreateDevEnvironment],
    recoverable: false,
    moduleRunnerTransform: false
  },
  webSocketToken: 'E02DhSCYRiU3',
  getSortedPlugins: [Function: getSortedPlugins],
  getSortedPluginHooks: [Function: getSortedPluginHooks],
  createResolver: [Function: createResolver],
  fsDenyGlob: [Function: arrayMatcher],
  safeModulePaths: Set(0) {},
  additionalAllowedHosts: []
}
vite v6.3.5 building for production...
transforming...
